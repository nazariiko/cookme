name: Build

on: [pull_request]

jobs:
  get-environment:
    name: Get Environment
    uses: Gershon-A/cookme/.github/workflows/environment.yaml@main

  generate-version:
    name: Generate Version
    needs: get-environment
    if: needs.get-environment.outputs.deployment-environment
    uses: Gershon-A/cookme/.github/workflows/version.yaml@main
    with:
      deployment-environment: ${{ needs.get-environment.outputs.deployment-environment }}

  ci-build:
    runs-on: ubuntu-latest
    needs: [get-environment, generate-version]
    if: needs.generate-version.outputs.version
    env:
      DEPLOYMENT_ENVIRONMENT: ${{ needs.get-environment.outputs.deployment-environment }}
      VERSION: ${{ needs.generate-version.outputs.version }}

    strategy:
      matrix:
        node-version: [16.x, 18.x]

    steps:
      - name: SCM
        uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: |
            ~/.npm
            **/node_modules
            **/.eslintcache
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install dependencies
        run: npm install --production

      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: List the state of node modules
        continue-on-error: true
        run: npm list

      - name: Build
        env:
          subFolder: /subFolder
        run: npm run build

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  release:
    name: Release
    needs: [get-environment, generate-version, ci-build]
    uses: Gershon-A/cookme/.github/workflows/release.yaml@main
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/heads/release')
    with:
      deployment-environment: ${{ needs.get-environment.outputs.deployment-environment }}
      version: ${{ needs.generate-version.outputs.version }}
      cleanup-artifacts: true
